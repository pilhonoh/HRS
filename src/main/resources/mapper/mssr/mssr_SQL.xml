<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mssrMapper">


	<!-- 페이징 처리를 위한 HEADER -->
	<sql id="COMMON_PAGING_HEADER">
		SELECT R1.* FROM (
	</sql>
	
	
	<!-- 페이징 처리를 위한 TAIL -->
	<sql id="COMMON_PAGING_TAIL">
		) R1
		LIMIT #{rowPerPage, jdbcType=INTEGER} OFFSET #{startRow, jdbcType=INTEGER}
	</sql>
	
	
	<!-- 관리사 목록 조회 -->
	<select id="getMssrList" parameterType="map" resultType="hashmap">
		SELECT *
		FROM MASSEUR
		WHERE HFFC_YN = 'Y'
		<if test='bldCode != null and bldCode != ""'>
		AND BLD_CODE = #{bldCode}
		</if>
	</select>
	
	
	<!-- 관리사 스케쥴 리스트 조회 -->
	<select id="selectScheduleList" parameterType="map" resultType="hashmap">
		<include refid="COMMON_PAGING_HEADER"/>
		SELECT 
			A.*,
			B.LAST_STTUS_CODE,
			(SELECT CODE_NM FROM CMMN_CODE WHERE CODE = A.BLD_CODE) AS BLD_NM,
			(SELECT NCNM FROM MASSEUR WHERE EMPNO = A.MSSR_EMPNO) AS MSSR_NCNM,
			(SELECT SEXDSTN FROM MASSEUR WHERE EMPNO = A.MSSR_EMPNO) AS MSSR_SEXDSTN,
			(SELECT CODE_NM FROM CMMN_CODE WHERE CODE = A.BED_CODE AND CODE_TYS = A.BLD_CODE) AS BED_NM,
			(SELECT CODE_NM FROM CMMN_CODE WHERE CODE = LAST_STTUS_CODE) AS STTUS_NM,
			 GROUP_CONCAT(A.RESVE_TM ORDER BY RESVE_TM SEPARATOR ',') AS RESVE_TM_LIST,
		     GROUP_CONCAT(A.RESVE_NO ORDER BY A.RESVE_NO SEPARATOR ',') AS RESVE_NO_LIST,  
		     SUM(CASE WHEN  B.LAST_STTUS_CODE IN ('STS01','STS03') THEN 1 ELSE 0 END) AS RESVE_COMPT_CNT,
		     SUM(CASE WHEN  B.LAST_STTUS_CODE ='STS05' THEN 1 ELSE 0 END) AS CARE_COMPT_CNT
		  
		FROM resve_sttus A
		INNER JOIN (
			SELECT T1.RESVE_NO, T1.STTUS_CODE AS LAST_STTUS_CODE
			FROM RESVE_HIST T1
			INNER JOIN (
				SELECT RESVE_NO, MAX(REG_DT) AS REG_DT
				FROM RESVE_HIST
				GROUP BY RESVE_NO
			) T2
			ON T1.RESVE_NO = T2.RESVE_NO
			AND T1.REG_DT = T2.REG_DT		
		) B
		ON A.RESVE_NO = B.RESVE_NO
		WHERE 1=1
			<![CDATA[
			AND B.LAST_STTUS_CODE <> 'STS99'
			]]>
			AND RESVE_DE BETWEEN #{fromDate} AND #{toDate}
			<if test='bldCode != null and bldCode != ""'>
			AND BLD_CODE = #{bldCode}
			</if>
			<if test='mssrEmpno != null and mssrEmpno != ""'>
			AND MSSR_EMPNO = #{mssrEmpno}
			</if>
		GROUP BY A.RESVE_DE, A.BLD_CODE, A.MSSR_EMPNO, BED_CODE
		ORDER BY A.RESVE_DE DESC ,A.BLD_CODE
		<include refid="COMMON_PAGING_TAIL"/>
	</select>
	
	
	<!-- 관리사 스케쥴 리스트 전체 ROW COUNT 값 조회 -->
	<select id="selectScheduleListTotalCount" parameterType="map" resultType="int">
	SELECT count(*) 
	FROM (
		SELECT
			A.*
		FROM resve_sttus A
		INNER JOIN (
			SELECT T1.RESVE_NO, T1.STTUS_CODE AS LAST_STTUS_CODE
			FROM RESVE_HIST T1
			INNER JOIN (
				SELECT RESVE_NO, MAX(REG_DT) AS REG_DT
				FROM RESVE_HIST
				GROUP BY RESVE_NO
			) T2
			ON T1.RESVE_NO = T2.RESVE_NO
			AND T1.REG_DT = T2.REG_DT		
		) B
		ON A.RESVE_NO = B.RESVE_NO
		WHERE 1=1
			<![CDATA[
			AND B.LAST_STTUS_CODE <> 'STS99'
			]]>
			AND RESVE_DE BETWEEN #{fromDate} AND #{toDate}
			<if test='bldCode != null and bldCode != ""'>
			AND BLD_CODE = #{bldCode}
			</if>
			<if test='mssrEmpno != null and mssrEmpno != ""'>
			AND MSSR_EMPNO = #{mssrEmpno}
			</if>
		GROUP BY A.RESVE_DE, A.BLD_CODE, A.MSSR_EMPNO
	    ORDER BY A.RESVE_DE DESC ,A.BLD_CODE
	) C
	</select>
	<select id ="selectScheduleDetail" parameterType="map" resultType="hashmap">
         SELECT A.RESVE_DE    AS  RESVE_DE 
			 , C.NCNM        AS NCNM
             , A.MSSR_EMPNO  AS MSSR_EMPNO
             , A.RESVE_EMPNO AS RESVE_EMPNO
             , A.WAIT_EMPNO  AS WAIT_EMPNO
             , A.BLD_CODE    AS BLD_CODE
             , A.BED_CODE    AS BED_CODE
             , GROUP_CONCAT(A.RESVE_TM ORDER BY RESVE_TM SEPARATOR ',') AS RESVE_TM_LIST
		     , GROUP_CONCAT(A.RESVE_NO ORDER BY A.RESVE_NO SEPARATOR ',') AS RESVE_NO_LIST  
		     , IFNULL(GROUP_CONCAT(CASE WHEN B.STTUS_CODE IN ('STS01','STS03') THEN A.RESVE_TM  END ORDER BY RESVE_TM SEPARATOR ','),'')  AS RESVE_COMPT
             , IFNULL(GROUP_CONCAT(CASE WHEN B.STTUS_CODE ='STS05' THEN A.RESVE_TM  END ORDER BY RESVE_TM SEPARATOR ','),'')  AS CARE_COMPT
		 FROM RESVE_STTUS A 
         JOIN RESVE_HIST B ON A.RESVE_NO = B.RESVE_NO  
            AND B.REG_DT = (SELECT MAX(AA.REG_DT) FROM  RESVE_HIST AA  WHERE AA.RESVE_NO  = A.RESVE_NO ) 
         JOIN MASSEUR C  ON A.MSSR_EMPNO =C.EMPNO   
		 WHERE A.RESVE_DE =  #{resveDate}
		   AND  A.MSSR_EMPNO =  #{mssrEmpno}
           AND  A.BLD_CODE = #{bldCode}
           AND  A.BED_CODE = #{bedCode}
		   AND CANCL_YN ='N'
         GROUP BY  A.RESVE_DE   
			      , A.MSSR_EMPNO
                  , A.BED_CODE   
                  , A.BLD_CODE   
	</select>
     <select id ="selectResveItem" parameterType="map" resultType="hashmap">
     SELECT IFNULL(RESVE_NO,COUNT(*))  AS resveNo 
	   FROM RESVE_STTUS 
	  WHERE RESVE_DE   = #{resveDate}
        AND MSSR_EMPNO =  #{mssrEmpno}
        AND BLD_CODE   =   #{bldCode}
        AND RESVE_TM   = #{resveTime}
        AND BED_CODE = #{bedCode}
        AND CANCL_YN = 'N'
     </select>
     
     <!-- 관리사 스케쥴 등록 -->
     <insert id="insertSchedule"  useGeneratedKeys="true" keyProperty="RESVE_NO"  parameterType="map" >     
       	INSERT INTO RESVE_STTUS ( RESVE_DE, RESVE_TM, BLD_CODE, MSSR_EMPNO, BED_CODE, REG_EMPNO, REG_DT)
						 VALUES ( #{resveDate}, #{resveTime}, #{bldCode}, #{mssrEmpno}, #{bedCode}, #{regEmpNo}, now(3))
		<selectKey keyProperty="RESVE_NO"  resultType="int" order="AFTER">
		  SELECT LAST_INSERT_ID()
		</selectKey>				 
     </insert>
	 <!-- 관리사 예약 상태 등록  -->
     <insert id="insertResveHist"  parameterType="map">
       	INSERT INTO RESVE_HIST ( RESVE_NO , STTUS_CODE  ,REG_EMPNO , REG_DT)
						 VALUES ( #{RESVE_NO}, #{sttusCode}, #{regEmpNo}, now(6))
     </insert>
     
     <update id="deleteResve">
        UPDATE RESVE_STTUS
           SET CANCL_YN = #{canclYn}
             , UPDT_EMPNO = #{regEmpNo}
 			 , UPDT_DT =  now(3)
        WHERE RESVE_NO = #{RESVE_NO}
     </update>
     

      <select id ="selectResveCheck" parameterType="map"  resultType="hashmap">
		  SELECT IFNULL( MAX(CASE  WHEN  A.MSSR_EMPNO  = #{mssrEmpno} THEN 10 ELSE 0 END) 
		        + MAX(CASE  WHEN  A.BED_CODE  = #{bedCode} THEN  20 ELSE 0 END),0) AS RESVE_CHECK 
		          ,IFNULL(MIN(A.RESVE_DE),#{resveDate})  AS START_DATE
                  ,IFNULL(MAX(A.RESVE_DE),#{resveDate})  AS END_DATE
                  ,IFNULL(A.BED_CODE,'') AS BED_CODE
                  ,IFNULL(A.RESVE_TM,'')   AS  RESVE_TM
                  ,IFNULL((SELECT NCNM FROM MASSEUR WHERE EMPNO = A.MSSR_EMPNO),'') AS MSSR_NCNM
                 ,COUNT(*)
				FROM resve_sttus A
			   WHERE A.RESVE_DE = #{resveDate}
		         AND A.RESVE_TM = #{resveTime}
		         AND A.BLD_CODE = #{bldCode}
		         AND A.CANCL_YN = 'N'
     </select>
     
   <select id="selectSmsInfoGet" parameterType="map" resultType="hashmap">
     SELECT A.RESVE_NO AS RESVE_NO 
          , A.RESVE_DE AS RESVE_DE
          , IFNULL(A.RESVE_EMPNO,'') AS RESVE_EMPNO
          , IFNULL(A.WAIT_EMPNO,'')  AS WAIT_EMPNO
          , A.RESVE_TM    AS RESVE_TM
          , B.CODE_NM     AS RESVE_TM_STR
          , C.CODE_NM     AS BLD_NM
          , D.CODE_NM     AS BED_NM
          , A.COMPT_YN    AS COMPT_YN
   FROM RESVE_STTUS A 
   JOIN  CMMN_CODE B ON A.RESVE_TM = B.CODE AND CODE_TYL ='RVT'
   JOIN  CMMN_CODE C ON A.BLD_CODE = C.CODE AND C.CODE_TYL ='BLD'
   JOIN  CMMN_CODE D ON A.BED_CODE = D.CODE AND A.BLD_CODE = D.CODE_TYS AND D.CODE_TYL ='BED'
  WHERE RESVE_NO = #{RESVE_NO}  ;
 </select>    
</mapper>